eureka:
  port: 8761
  address: localhost
db:
  port: 3307
  host: localhost
  name: userDatabase
---
spring:
  profiles: docker
eureka:
  port: 8761
  address: eureka-server
db:
  port: 3307
  host: user-database
  name: userDatabase
---

server:
  port: 8091
  address: localhost
#
#Spring
#

spring:
  application:
    name: AUTHORIZATION-SERVICE
  datasource:
    url: jdbc:mysql://${db.host}:${db.port}/${db.name}?useUnicode=true&serverTimezone=UTC
    driver: com.mysql.Driver
    username: root
    password: root
    # initialization-mode: always
  jpa:
    hibernate:
      ddl-auto: update
      show-sql: true
      cache:
        use_query_cache: false
        use_second_level_cache: false
    properties:
      hibernate:
        connection:
          charSet: UTF-8
        hbm2ddl:
          import_files_sql_extractor: org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor
        dialect: org.hibernate.dialect.MySQL57Dialect

  http:
    multipart:
      max-file-size: 1500KB
      max-request-size: 1500KB
  main:
    allow-bean-definition-overriding: true

#
#JWT
#
jwt:
  header: Authorization
  expires_in: 86400
  secret: sgd34bwfAbfSBPpe0r8gwbg
  cookie: AUTH-TOKEN
#
#EUREKA SETTINGS
#
eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    service-url:
      defaultZone: http://${eureka.address}:${eureka.port}/eureka
  server:
    waitTimeInMsWhenSyncEmpty: 0
  healthcheck:
    enabled: true
  instance:
    prefer-ip-address: true
    lease-expiration-duration-in-seconds: 15
    lease-renewal-interval-in-seconds: 5
    ip-address: ${server.address}
    instance-id: ${server.address}:${server.port}

api:
  rout: /api
  authorization-service:
    rout: ${api.rout}/authorization
    admin:
      rout: ${api.authorization-service.rout}/admin
